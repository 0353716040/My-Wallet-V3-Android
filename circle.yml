machine:
  environment:
    ANDROID_HOME: /usr/local/android-sdk-linux
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
  java:
    version: oraclejdk8

notify:
  webhooks:
    - url: https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN

general:
   artifacts:
     - $CIRCLE_TEST_REPORTS

dependencies:
  pre:
    # Install platform tools including sdkmanager
    - echo y | android -s update sdk -u -a -t "tools"
    # Android SDK Platform 25
    - if [ ! -d "/usr/local/android-sdk-linux/platforms/android-25" ]; then echo y | $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-25"; fi
    # Android SDK Build-tools, revision 25.0.3
    - if [ ! -d "/usr/local/android-sdk-linux/build-tools/25.0.3" ]; then echo y | $ANDROID_HOME/tools/bin/sdkmanager "build-tools;25.0.3"; fi
    # Google Support Repository, revision 55 / Local Maven repository for Google Play Services
    - if [ ! -d "/usr/local/android-sdk-linux/extras/google/m2repository/com/google/android/gms/play-services/11.0.2" ]; then echo y | $ANDROID_HOME/tools/bin/sdkmanager "extras;google;m2repository"; fi
    - ./gradlew app:dependencies --console=plain

  cache_directories:
    # Android SDK
    - /usr/local/android-sdk-linux/tools
    - /usr/local/android-sdk-linux/platform-tools
    - /usr/local/android-sdk-linux/build-tools
    - /usr/local/android-sdk-linux/licenses
    - /usr/local/android-sdk-linux/extras/android/m2repository
    - /usr/local/android-sdk-linux/extras/google/m2repository

    # Gradle caches
    - /home/ubuntu/.gradle/caches/
    - /home/ubuntu/.gradle/wrapper/

test:
  pre:
    # Decode Firebase API key
    - echo $FIREBASE_API_JSON | base64 --decode > app/google-services.json
  override:
    - ./gradlew assembleEnvProdMinApi21Debug testEnvProdMinApi21DebugUnitTest testEnvProdMinApi21DebugUnitTestCoverage coveralls --no-daemon -Dpre-dex=false -Porg.gradle.parallel=false -Pcom.android.build.threadPoolSize=1 --stacktrace --console=plain
  post:
    # Move unit test XML to correct directory
    - mkdir -p $CIRCLE_TEST_REPORTS/junit/
    - find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;